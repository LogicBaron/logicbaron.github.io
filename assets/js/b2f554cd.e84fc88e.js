"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5894],{6042:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"/2024/04/04/","metadata":{"permalink":"/blog/2024/04/04/","editUrl":"https://github.com/logicbaron/logicbaron.github.io/tree/dev/blog/2024-04-04.md","source":"@site/blog/2024-04-04.md","title":"LLM finetuning","description":"LLM finetuning\uc744 \uacfc\uc81c\uc5d0\uc11c \uc9c4\ud589\ud574\uc57c \ud574\uc11c \uc218\ud589\ud574\ubd24\ub2e4. \ubb3c\ub860 \ud300\uc6d0\ubd84\ub4e4\uc774 \uc9dc\uc8fc\uc2e0 \ucf54\ub4dc\uac00 \uc788\uc5c8\uc9c0\ub9cc \uadf8\ub798\ub3c4 \uc0dd\uac01\ubcf4\ub2e4 \uc5c4\uccad \uc27d\uac8c \ub3cc\uc544\uac00\ub294 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub4e4\uc774 \uc798 \uc791\uc131\ub418\uc5b4 \uc788\ub2e4\ub294 \uc0ac\uc2e4\uc774 \uc2e0\uae30\ud588\ub2e4. \uc608\uc804\uc5d0 \uacf5\ubd80\ud558\uace0 \uc0ac\uc6a9\uc740 \uc548 \ud588\ub358 deepspeed\ub3c4 \ubcf8\uaca9\uc801\uc73c\ub85c \uc0ac\uc6a9\ub418\ub294 \ud604\uc0c1\ub3c4 \ubd24\ub2e4.","date":"2024-04-04T00:00:00.000Z","formattedDate":"April 4, 2024","tags":[],"readingTime":1.295,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"nextItem":{"title":"MatPlotlib \ud55c\uae00 \uc124\uc815 \uac04\ud3b8\ud558\uac8c \ud558\uae30","permalink":"/blog/2024/02/14/"}},"content":"LLM finetuning\uc744 \uacfc\uc81c\uc5d0\uc11c \uc9c4\ud589\ud574\uc57c \ud574\uc11c \uc218\ud589\ud574\ubd24\ub2e4. \ubb3c\ub860 \ud300\uc6d0\ubd84\ub4e4\uc774 \uc9dc\uc8fc\uc2e0 \ucf54\ub4dc\uac00 \uc788\uc5c8\uc9c0\ub9cc \uadf8\ub798\ub3c4 \uc0dd\uac01\ubcf4\ub2e4 \uc5c4\uccad \uc27d\uac8c \ub3cc\uc544\uac00\ub294 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub4e4\uc774 \uc798 \uc791\uc131\ub418\uc5b4 \uc788\ub2e4\ub294 \uc0ac\uc2e4\uc774 \uc2e0\uae30\ud588\ub2e4. \uc608\uc804\uc5d0 \uacf5\ubd80\ud558\uace0 \uc0ac\uc6a9\uc740 \uc548 \ud588\ub358 deepspeed\ub3c4 \ubcf8\uaca9\uc801\uc73c\ub85c \uc0ac\uc6a9\ub418\ub294 \ud604\uc0c1\ub3c4 \ubd24\ub2e4.\\n\\nLORA, peft, deepspeed, SFT \ub4f1\uc758 \uae30\uc220\uc744 \uc0ac\uc6a9\ud588\ub294\ub370 \uae09\ud558\uac8c \uc9c4\ud589\ud55c\ub2e4\uace0 \uae30\uc220 \ub0b4\uc6a9\uae4c\uc9c0\ub294 \uc0c1\uc138\ud788 \ubabb\ubd24\ub2e4. \ub610 LLM \ub17c\ubb38\uc5d0\uc11c \uc0ac\uc6a9\ud558\ub294 metrics\ub3c4 \uc774\ud574\uac00 \uc798 \uc548\ub410\uace0, \ub9c8\uce58 \ucc98\uc74c DeepLearning\uc744 \uacf5\ubd80\ud558\ub358 \uc2dc\uc808\ub85c \ub3cc\uc544\uac04 \uac83 \uac19\uc558\ub2e4. \uc544\uc9c1 Deep learning \ubd84\uc57c\uc5d0\uc11c\ub3c4 \uacf5\ubd80\ud574\uc57c\ud560 \uac83\ub4e4\uc774 \ub9ce\uc740\ub370 LLM \ucabd \uae30\uc220 \uacf5\ubd80\ub97c \ub530\ub77c\uc7a1\uc544\uc57c\ud55c\ub2e4\ub294 \uc0dd\uac01\uc774 \uac15\ud558\uac8c \ub4e4\uc5c8\ub2e4. \\n\\nGPT technical Report \uac00 \uc815\uc11d\uac19\uc740 \ucc45\uc774\uc9c0\ub9cc [HCX Technical Reprot](https://arxiv.org/pdf/2404.01954.pdf) \uba3c\uc800 \ucb49 \uc77d\uc73c\uba70 \uacf5\ubd80\ub97c \uc8fc\ub9d0\ubd80\ud130 \ubcf8\uaca9\uc801\uc73c\ub85c \uc2dc\uc791\ud574\ubcf4\ub824 \ud55c\ub2e4."},{"id":"/2024/02/14/","metadata":{"permalink":"/blog/2024/02/14/","editUrl":"https://github.com/logicbaron/logicbaron.github.io/tree/dev/blog/2024-02-14.md","source":"@site/blog/2024-02-14.md","title":"MatPlotlib \ud55c\uae00 \uc124\uc815 \uac04\ud3b8\ud558\uac8c \ud558\uae30","description":"matplotlib \ud55c\uae00 \uc124\uc815\ud558\ub294 \uac8c \uc0dd\uac01\ubcf4\ub2e4 \uc5b8\uc81c\ub098 \uae4c\ub2e4\ub86d\uace0 \uc138\ud305\ud558\uae30 \uadc0\ucc2e\uc544\uc11c \uc601\uc5b4\ub85c \uc804\ubd80 \ucc98\ub9ac\ud574\uc654\ub294\ub370, \uc774 \uacfc\uc815\uc744 \ud3b8\ud558\uac8c \ud574\uc8fc\ub294 \ub77c\uc774\ube0c\ub7ec\ub9ac\uac00 \uc788\ub2e4.","date":"2024-02-14T00:00:00.000Z","formattedDate":"February 14, 2024","tags":[],"readingTime":0.585,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"LLM finetuning","permalink":"/blog/2024/04/04/"},"nextItem":{"title":"tmux \uc218\ub3d9 \uc124\uce58","permalink":"/blog/2023/11/09/"}},"content":"import blog_2024021401 from \'./asset/blog_2024021401.png\';\\n\\n\\nmatplotlib \ud55c\uae00 \uc124\uc815\ud558\ub294 \uac8c \uc0dd\uac01\ubcf4\ub2e4 \uc5b8\uc81c\ub098 \uae4c\ub2e4\ub86d\uace0 \uc138\ud305\ud558\uae30 \uadc0\ucc2e\uc544\uc11c \uc601\uc5b4\ub85c \uc804\ubd80 \ucc98\ub9ac\ud574\uc654\ub294\ub370, \uc774 \uacfc\uc815\uc744 \ud3b8\ud558\uac8c \ud574\uc8fc\ub294 \ub77c\uc774\ube0c\ub7ec\ub9ac\uac00 \uc788\ub2e4.\\n\\n## koreanize_matplotlib\\n\\n```python\\nimport matplotlib.pyplot as plt\\nimport koreanize_matplotlib\\n\\nplt.plot([-1, 0, 1, 2])\\nplt.title(\'\uadf8\ub798\ud504 \uc81c\ubaa9\', fontweight=\\"bold\\")\\nplt.xlabel(\'\uac04\ub2e8\ud55c \uadf8\ub798\ud504\')\\nplt.show()\\n```\\n\\n<div style={{textAlign: \'center\'}}>\\n <img src={blog_2024021401} style={{width: 500}} />\\n</div>\\n\\n\\n\ubc14\ub85c \ud55c\uae00\ub85c \ub41c \ud14d\uc2a4\ud2b8\uac00 \uc815\uc0c1\uc801\uc73c\ub85c \ucd9c\ub825\uc774 \ub41c\ub2e4!"},{"id":"/2023/11/09/","metadata":{"permalink":"/blog/2023/11/09/","editUrl":"https://github.com/logicbaron/logicbaron.github.io/tree/dev/blog/2023-11-09.md","source":"@site/blog/2023-11-09.md","title":"tmux \uc218\ub3d9 \uc124\uce58","description":"tmux \uc124\uce58\ub97c sudo \uad8c\ud55c\uc774 \ud544\uc694\ud55c \ud328\ud0a4\uc9c0 \ub9e4\ub2c8\uc800\ub97c \uac70\uce58\uc9c0 \uc54a\uace0 \ubc14\ub85c \ud558\uae30 \uc704\ud574\uc11c \uc218\ub3d9 \uc124\uce58\uc5d0 \ub300\ud574\uc11c \uc54c\uc544\ubd24\ub2e4.","date":"2023-11-09T00:00:00.000Z","formattedDate":"November 9, 2023","tags":[],"readingTime":1.14,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"MatPlotlib \ud55c\uae00 \uc124\uc815 \uac04\ud3b8\ud558\uac8c \ud558\uae30","permalink":"/blog/2024/02/14/"},"nextItem":{"title":"\uc6f9\ub370\uc774\ud130 \ubdf0\uc5b4 \ub9cc\ub4e4\uae30 (feat. postgres)","permalink":"/blog/2023/11/07/"}},"content":"tmux \uc124\uce58\ub97c sudo \uad8c\ud55c\uc774 \ud544\uc694\ud55c \ud328\ud0a4\uc9c0 \ub9e4\ub2c8\uc800\ub97c \uac70\uce58\uc9c0 \uc54a\uace0 \ubc14\ub85c \ud558\uae30 \uc704\ud574\uc11c \uc218\ub3d9 \uc124\uce58\uc5d0 \ub300\ud574\uc11c \uc54c\uc544\ubd24\ub2e4.\\n\\n## Libevent \ube4c\ub4dc\\n\\nhttps://libevent.org/ \uc0ac\uc774\ud2b8\uc5d0\uc11c libevent \uc555\ucd95 \ud30c\uc77c \ub2e4\uc6b4\ub85c\ub4dc.\\n\\n```bash\\n$ tar -xvzf libevent-2.0.17-stable.tar.gz\\n$ cd libevent-2.0.17-stable\\n$ ./configure --prefix=$HOME/tmux/\\n$ make\\n$ make install\\n```\\n\\n## ncurses \ube4c\ub4dc\\n\\n[ncurses](https://invisible-island.net/ncurses/announce.html) \ub2e4\uc6b4\ub85c\ub4dc \ud398\uc774\uc9c0 \uc5d0\uc11c stable \ub2e4\uc6b4\ub85c\ub4dc.\\n- \ub2e4\uc6b4\ub85c\ub4dc \ud398\uc774\uc9c0 : https://ftp.gnu.org/pub/gnu/ncurses/\\n\\n```bash\\n$ tar -xvzf ncurses-5.9.tar.gz\\n$ cd ncurses-5.9/\\n$ ./configure --prefix=$HOME/tmux/\\n$ make\\n$ make install\\n```\\n\\n$HOME/tmux/include/ncurses \uc544\ub798\uc5d0 \ube4c\ub4dc\uac00 \uc774\ub8e8\uc5b4\uc9c0\ubbc0\ub85c, $HOME/tmux/include \uacbd\ub85c\ub85c \uc62e\uaca8\uc918\uc57c \ud55c\ub2e4.\\n\\n```bash\\n$ cp $HOME/tmux/include/ncurses/* $HOME/tmux/include/\\n```\\n\\n## tmux \ube4c\ub4dc\\n\\nhttps://github.com/tmux/tmux/releases \uc5d0\uc11c tmux \ucd5c\uc2e0 \ubc84\uc804 \ub2e4\uc6b4\ub85c\ub4dc.\\n\\n```bash \\n$ tar -xvzf tmux-1.6.tar.gz\\n$ cd tmux-1.6\\n$ ./configure \\\\\\n    CFLAGS=\\"-I$HOME/tmux/include\\" \\\\\\n    LDFLAGS=\\"-L$HOME/tmux/lib\\" \\\\\\n    --prefix=$HOME/tmux/\\n$ make\\n$ make install\\n```\\n\\n\ub9c8\uc9c0\ub9c9\uc73c\ub85c LD_LIBRARY_PATH \ud658\uacbd \ubcc0\uc218\ub97c \uc124\uc815\ud574\uc8fc\uba74 \ub05d\ub09c\ub2e4. ~/.bashrc \uc640 \uac19\uc740 \ud30c\uc77c\uc5d0\uc11c \ub2e4\uc74c \ud589\uc744 \ucd94\uac00\ud55c\ub2e4.\\n\\n```sh title=\\"~/.bashrc\\"\\nexport LD_LIBRARY_PATH=$HOME/tmux/lib\\n```"},{"id":"/2023/11/07/","metadata":{"permalink":"/blog/2023/11/07/","editUrl":"https://github.com/logicbaron/logicbaron.github.io/tree/dev/blog/2023-11-07.md","source":"@site/blog/2023-11-07.md","title":"\uc6f9\ub370\uc774\ud130 \ubdf0\uc5b4 \ub9cc\ub4e4\uae30 (feat. postgres)","description":"\uc11c\ubc84\uc5d0\uc11c postgres DB \ub97c \ub744\uc6b0\uace0, streamlit \uc5d0\uc11c table \uc744 \uc77d\uc5b4\uc11c \uc774\ubbf8\uc9c0\ub97c \ub744\uc6b8 \uc218 \uc788\ub294 \ucf54\ub4dc\ub97c \uc791\uc131\ud588\uc74c.","date":"2023-11-07T00:00:00.000Z","formattedDate":"November 7, 2023","tags":[],"readingTime":2.455,"hasTruncateMarker":false,"authors":[],"frontMatter":{},"unlisted":false,"prevItem":{"title":"tmux \uc218\ub3d9 \uc124\uce58","permalink":"/blog/2023/11/09/"}},"content":"\uc11c\ubc84\uc5d0\uc11c postgres DB \ub97c \ub744\uc6b0\uace0, streamlit \uc5d0\uc11c table \uc744 \uc77d\uc5b4\uc11c \uc774\ubbf8\uc9c0\ub97c \ub744\uc6b8 \uc218 \uc788\ub294 \ucf54\ub4dc\ub97c \uc791\uc131\ud588\uc74c.\\n\\n## postgres \uc11c\ubc84 \ub744\uc6b0\uae30\\n\\n postgres docker \uc774\ubbf8\uc9c0\ub97c \uc0ac\uc6a9\ud588\ub2e4. \uc778\uc99d \uad00\ub828\ud574\uc11c \ubb38\uc81c\uac00 \uc788\uc5b4\uc11c \uaf64 \uad6c\ubc84\uc804\uc744 \uc0ac\uc6a9\ud588\uc74c.\\n\\n https://hub.docker.com/_/postgres \uc5d0\uc11c postgres docker image \ub97c \ub2e4\uc6b4\ub85c\ub4dc \ud55c\ub2e4.\\n\\n \ucd5c\uc2e0\ubc84\uc804 \uc0ac\uc6a9\ud558\uba74 client server \uc640 \uc778\uc99d \uc624\ub958\uac00 \uc788\uc5b4\uc11c 12-alphine tag \uc0ac\uc6a9\ud588\ub2e4. postgres db \uc758 \uae30\ubcf8 \ud3ec\ud2b8\uc778 5432\ubc88 \uc0ac\uc6a9\ud55c\ub2e4.\\n\\n ```sh\\n $ docker pull postgres:12-alphine\\n $ docker run -d -p 5432:5432 --name postgres -e POSTGRES_USER=${USER_NAME} -e POSTGRES_PASSWORD=${PASSWROD} -i postgres:12-alphine\\n ```\\n\\n ## postgres \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc124\uc815\\n \\n \ucee8\ud14c\uc774\ub108 \uc9c4\uc785\ud574\uc11c pg \ub0b4\ubd80\uc5d0 \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc640 \ud14c\uc774\ube14\uc744 \uc0dd\uc131\ud574\uc57c \ud55c\ub2e4.\\n \uba3c\uc800 postgres docker \uc5d0 bash \uc258\ub85c \uc9c4\uc785\ud55c\ub2e4.\\n\\n ```sh\\n $ docker exec -it postgres /bin/bash\\n ```\\n\\n ```sh\\n $ psql -U ${USER_NAME}\\n $ (psql) create database mydb;\\n ```\\n\\n ## python pandas \ub97c \uc774\uc6a9\ud55c table \uc0dd\uc131\\n\\n sqlalchemy \uc640 pandas \ub97c \uc774\uc6a9\ud574\uc11c dataframe \uc744 pg db \uc5d0 \uc5c5\ub85c\ub4dc \ud558\uae30.\\n\\n ```python title=\\"upload_df_to_pg.py\\"\\n import sqlalchemy\\n import pandas as pd\\n \\n MY_DB = \\"postgresql://{USER_NAME}:{PASSWORD}@127.0.0.1:5432/mydb\\"\\n engine = sqlalchemy.create_engine(MY_DB)\\n conn = engine.connect()\\n\\n df = pd.read_parquet(\\"./path/to/parquet.parquet\\")\\n df.to_sql(\\"mytable\\", engine, if_exists=\'replace\', index=False)\\n ```\\n\\n ## \uc5c5\ub85c\ub4dc \ub41c \ud14c\uc774\ube14 \ud655\uc778\ud558\uae30\\n\\n \ub2e4\uc2dc \ub3c4\ucee4\uc5d0 \uc9c4\uc785\ud574\uc11c \uc9c4\ud589\ud55c\ub2e4.\\n\\n  ```sh\\n $ docker exec -it postgres /bin/bash\\n ```\\n\\n- \ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc811\uc18d : `\\\\c`\\n- \ud14c\uc774\ube14 \uc870\ud68c \uba85\ub839 : `\\\\dt`\\n- \uc0ac\uc6a9\uc790 \uc870\ud68c : `\\\\du`\\n\\n ```sh\\n $ psql -U ${USER_NAME}\\n $ (psql) \\\\c mydb;\\n $ (psql) \\\\dt;\\n ```\\n\\n## streamlit \uc774\uc6a9\ud55c \uc6f9\ub370\uc774\ud130 \ubdf0\uc5b4 \ub9cc\ub4e4\uae30\\n\\nlarge dataframe \uc758 \uacbd\uc6b0 streamlit \uc5d0 \uc9c1\uc811 \uc62c\ub824\uc11c \uc0ac\uc6a9\ud558\uba74 \uc18d\ub3c4\uac00 \ub108\ubb34 \ub290\ub824\uc9c4\ub2e4. \uadf8\ub798\uc11c \ub370\uc774\ud130\ud504\ub808\uc784\uc744 postgres \uc5d0 \uc62c\ub824\ub450\uace0 sql \uc744 \uc774\uc6a9\ud574\uc11c \ub370\uc774\ud130\ub97c \uc77d\uc5b4\uc635\ub2c8\ub2e4.\\n\\n```python title=\\"my_viewer.py\\"\\nimport streamlit as st\\nimport sqlalchemy\\nfrom PIL import Image\\nimport numpy as np\\n\\n@st.cache_data\\ndef get_all_id(db, table):\\n    engine = sqlalchemy.create_engine(db)\\n    sql_select = f\\"select id from {table}\\"\\n    all_id = pd.read_sql(sql_select, engine)\\n    return all_id.tolist()\\n\\ndef get_random_id(db, table):\\n    list_all_id = get_all_id(db, table)\\n    return np.random.choice(list_all_id)\\n\\ndef get_image(db, table, id):\\n    engine = sqlalchemy.create_engine(db)\\n    sql_select = f\\"select img_path from {table} where id={id}\\"\\n    img_path = pd.read_sql(sql_select, engine).at[0, \'img_path\']\\n    return Image.open(img_path)\\n\\nst.title(\\"\uc774\ubbf8\uc9c0 \uc6f9\ubdf0\uc5b4 \ub370\ubaa8\\")\\nrandom_id = get_random_id(db, table)\\nst.image(get_image(db, table, random_id))\\n```"}]}')}}]);